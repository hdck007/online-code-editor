{"version":3,"sources":["TextEditor.js","Features.js","App.js","serviceWorker.js","index.js"],"names":["TextEditor","props","theme","language","displayName","value","onChange","className","onBeforeChange","editor","data","options","lineWrapping","lint","mode","lineNumbers","tabSize","Features","onThemeChange","event","target","App","useState","html","setHtml","css","setCss","js","setJs","srcDoc","setSrcDoc","setTheme","useEffect","timeout","setTimeout","clearTimeout","title","sandbox","frameBorder","width","height","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.e392a34d.chunk.js","sourcesContent":["\nimport React,{Component} from 'react';\nimport 'codemirror/mode/xml/xml';\nimport 'codemirror/mode/css/css';\nimport 'codemirror/mode/javascript/javascript';\nimport 'codemirror/lib/codemirror.css';\nimport 'codemirror/theme/monokai.css';\nimport 'codemirror/theme/night.css';\nimport 'codemirror/theme/neo.css';\nimport 'codemirror/theme/material.css';\nimport 'codemirror/theme/3024-day.css';\nimport 'codemirror/theme/3024-night.css';\nimport 'codemirror/theme/abcdef.css';\nimport 'codemirror/theme/ambiance.css';\nimport 'codemirror/theme/ayu-dark.css';\nimport 'codemirror/theme/ayu-mirage.css';\nimport 'codemirror/theme/base16-dark.css';\nimport 'codemirror/theme/bespin.css';\nimport 'codemirror/theme/base16-light.css';\nimport 'codemirror/theme/blackboard.css';\nimport 'codemirror/theme/cobalt.css';\nimport 'codemirror/theme/colorforth.css';\nimport 'codemirror/theme/dracula.css';\nimport 'codemirror/theme/duotone-dark.css';\nimport 'codemirror/theme/duotone-light.css';\nimport 'codemirror/theme/eclipse.css';\nimport 'codemirror/theme/elegant.css';\nimport 'codemirror/theme/erlang-dark.css';\nimport 'codemirror/theme/gruvbox-dark.css';\nimport 'codemirror/theme/hopscotch.css';\nimport 'codemirror/theme/icecoder.css';\nimport 'codemirror/theme/isotope.css';\nimport 'codemirror/theme/lesser-dark.css';\nimport 'codemirror/theme/liquibyte.css';\nimport 'codemirror/theme/lucario.css';\nimport 'codemirror/theme/material.css';\nimport 'codemirror/theme/material-darker.css';\nimport 'codemirror/theme/material-palenight.css';\nimport 'codemirror/theme/material-ocean.css';\nimport 'codemirror/theme/mbo.css';\nimport 'codemirror/theme/mdn-like.css';\nimport 'codemirror/theme/midnight.css';\nimport 'codemirror/theme/monokai.css';\nimport 'codemirror/theme/moxer.css';\nimport 'codemirror/theme/neat.css';\nimport 'codemirror/theme/neo.css';\nimport 'codemirror/theme/night.css';\nimport 'codemirror/theme/nord.css';\nimport 'codemirror/theme/oceanic-next.css';\nimport 'codemirror/theme/panda-syntax.css';\nimport 'codemirror/theme/paraiso-dark.css';\nimport 'codemirror/theme/paraiso-light.css';\nimport 'codemirror/theme/pastel-on-dark.css';\nimport 'codemirror/theme/railscasts.css';\nimport 'codemirror/theme/rubyblue.css';\nimport 'codemirror/theme/seti.css';\nimport 'codemirror/theme/shadowfox.css';\nimport 'codemirror/theme/solarized.css';\nimport 'codemirror/theme/the-matrix.css';\nimport 'codemirror/theme/tomorrow-night-bright.css';\nimport 'codemirror/theme/tomorrow-night-eighties.css';\nimport 'codemirror/theme/ttcn.css';\nimport 'codemirror/theme/twilight.css';\nimport 'codemirror/theme/vibrant-ink.css';\nimport 'codemirror/theme/xq-dark.css';\nimport 'codemirror/theme/xq-light.css';\nimport 'codemirror/theme/yeti.css';\nimport 'codemirror/theme/idea.css';\nimport 'codemirror/theme/darcula.css';\nimport 'codemirror/theme/yonce.css';\nimport 'codemirror/theme/zenburn.css';\nimport {Controlled as ControlledEditor} from 'react-codemirror2';\n\nexport default function TextEditor(props){\n\tconst {\n\ttheme,\n\tlanguage,\n\tdisplayName,\n\tvalue,\n\tonChange,\n\t} = props;\n\treturn(\n\t\t<div className=\"editor\">\n\t\t\t<div className=\"head\">\n\t\t\t  {displayName}\n\t\t\t  <button>o</button>\n\t\t\t</div>\n\t\t\t<ControlledEditor\n\t\t\t  onBeforeChange = {(editor, data, value) => onChange(value)}\n\t\t\t  value = {value}\n\t\t\t  className=\"wrapper\"\n\t\t\t  options = {{\n\t\t\t    lineWrapping:true,\n\t\t\t    lint: true,\n\t\t\t    mode: language,\n\t\t\t    theme: theme,\n\t\t\t    lineNumbers: true,\n\t\t\t    tabSize: 2,\n\t\t\t  }} />\n\t\t</div>\n\t)\n}\n\n","import React from 'react';\n\nfunction Features(props){\n\n  const {onThemeChange} = props;\n  return(\n  <div>\n  <label>Theme</label>\n  <select onChange = {event => onThemeChange(event.target.value)}>\n\t<option value=\"default\">None</option>\n\t<option value=\"3024-day\">3024-day</option>\n\t<option value=\"3024-night\">3024-night</option>\n\t<option value=\"abcdef\">abcdef</option>\n\t<option value=\"ambiance\">ambiance</option>\n\t<option value=\"ayu-dark\">ayu-dark</option>\n\t<option value=\"ayu-mirage\">ayu-mirage</option>\n\t<option value=\"base16-dark\">base16-dark</option>\n\t<option value=\"base16-light\">base16-light</option>\n\t<option value=\"bespin\">bespin</option>\n\t<option value=\"blackboard\">blackboard</option>\n\t<option value=\"cobalt\">cobalt</option>\n\t<option value=\"colorforth\">colorforth</option>\n\t<option value=\"darcula\">darcula</option>\n\t<option value=\"dracula\">dracula</option>\n\t<option value=\"duotone-dark\">duotone-dark</option>\n\t<option value=\"duotone-light\">duotone-light</option>\n\t<option value=\"eclipse\">eclipse</option>\n\t<option value=\"elegant\">elegant</option>\n\t<option value=\"erlang-dark\">erlang-dark</option>\n\t<option value=\"gruvbox-dark\">gruvbox-dark</option>\n\t<option value=\"hopscotch\">hopscotch</option>\n\t<option value=\"icecoder\">icecoder</option>\n\t<option value=\"idea\">idea</option>\n\t<option value=\"isotope\">isotope</option>\n\t<option value=\"lesser-dark\">lesser-dark</option>\n\t<option value=\"liquibyte\">liquibyte</option>\n\t<option value=\"lucario\">lucario</option>\n\t<option value=\"material\">material</option>\n\t<option value=\"material-darker\">material-darker</option>\n\t<option value=\"material-palenight\">material-palenight</option>\n\t<option value=\"material-ocean\">material-ocean</option>\n\t<option value=\"mbo\">mbo</option>\n\t<option value=\"mdn-like\">mdn-like</option>\n\t<option value=\"midnight\">midnight</option>\n\t<option value=\"monokai\">monokai</option>\n\t<option value=\"moxer\">moxer</option>\n\t<option value=\"neat\">neat</option>\n\t<option value=\"neo\">neo</option>\n\t<option value=\"night\">night</option>\n\t<option value=\"nord\">nord</option>\n\t<option value=\"oceanic-next\">oceanic-next</option>\n\t<option value=\"panda-syntax\">panda-syntax</option>\n\t<option value=\"paraiso-dark\">paraiso-dark</option>\n\t<option value=\"paraiso-light\">paraiso-light</option>\n\t<option value=\"pastel-on-dark\">pastel-on-dark</option>\n\t<option value=\"railscasts\">railscasts</option>\n\t<option value=\"rubyblue\">rubyblue</option>\n\t<option value=\"seti\">seti</option>\n\t<option\tvalue=\"shadowfox\">shadowfox</option>\n\t<option value=\"the-matrix\">the-matrix</option>\n\t<option value=\"tomorrow-night-bright\">tomorrow-night-bright</option>\n\t<option value=\"tomorrow-night-eighties\">tomorrow-night-eighties</option>\n\t<option value=\"ttcn\">ttcn</option>\n\t<option value=\"twilight\">twilight</option>\n\t<option value=\"vibrant-ink\">vibrant-ink</option>\n\t<option value=\"xq-dark\">xq-dark</option>\n\t<option value=\"xq-light\">xq-light</option>\n\t<option value=\"yeti\">yeti</option>\n\t<option value=\"yonce\">yonce</option>\n\t<option value=\"zenburn\">zenburn</option>\n  </select>\n  </div>\n  )\n\n}\n\nexport default Features;\n","import React, {useEffect, useState} from 'react';\nimport TextEditor from './TextEditor';\nimport Features from './Features';\n\nfunction App() {\n  const [html , setHtml] =useState('\\n\\n<!-- Enter Your HTML here -->\\n\\n<h1>No need of body head and html tags just start...</h1>');\n  const [css , setCss] = useState(\"\\n\\n/* Enter your CSS code here */\\n\\nbody{\\n\\tbackground:cyan;\\n\\tcolor:purple;\\n}\");\n  const [js , setJs] = useState('\\n\\n//  Enter Your JavaScript Code here');\n  const [srcDoc, setSrcDoc] = useState('');\n  const [theme, setTheme] = useState('default');\n  useEffect(() => {\n    const timeout = setTimeout(() => {\n      setSrcDoc(`\n        <html>\n        <body>${html}<body>\n\t<style>${css}</style>\n\t<script>${js}</script>\n\t</html>\n\t`) }, 600)\n\n\treturn () => clearTimeout(timeout)\n  }, [html, css, js]);\n  return (\n    <div className=\"App\">\n      <div className=\"half top\">\n\t<TextEditor\n\t\ttheme={theme}\n\t\tlanguage='xml'\n\t\tdisplayName='HTML'\n\t\tvalue={html}\n\t\tonChange={setHtml}\n\t/>\n\t<TextEditor\n\t\ttheme={theme}\n\t\tlanguage='css'\n\t\tdisplayName='CSS'\n\t\tvalue={css}\n\t\tonChange={setCss}\n\t/>\n\t<TextEditor\n\t\ttheme={theme}\n\t\tlanguage='javascript'\n\t \tdisplayName='JS'\n\t \tvalue={js}\n\t \tonChange={setJs}\n\t/>\n     </div>\n     <div className=\"half\">\n\t<iframe\n\tclassName=\"output-window\"\n\tsrcDoc={srcDoc}\n\ttitle=\"output\"\n\tsandbox=\"allow-scripts\"\n\tframeBorder=\"0\"\n\twidth=\"100%\"\n\theight=\"100%\"\n\t\t/>\n\t<div className=\"customize\">\n\t    <Features onThemeChange={setTheme} />\n\t</div>\n     </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}